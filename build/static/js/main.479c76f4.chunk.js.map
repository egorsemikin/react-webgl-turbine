{"version":3,"sources":["Turbine.js","App.js","serviceWorker.js","index.js"],"names":["THREE","require","TrackballControls","_","Turbine","_this","this","glRenderer","WebGLRenderer","canvas","refs","painter","alpha","antialias","animate","onAnimate","scene","Scene","camera","PerspectiveCamera","position","set","props","tankDiameter","add","light","PointLight","controls","rotateSpeed","zoomSpeed","panSpeed","noZoom","noPan","staticMoving","dynamicDampingFactor","keys","addEventListener","copy","startAutoRotation","raycaster","Raycaster","normalVector","Vector2","window","event","x","clientX","width","y","clientY","height","setFromCamera","intersects","intersectObjects","children","i","length","object","material","color","createTank","createShaft","createDisk","createHub","blades","changeBladeCount","bladeCount","baffles","changeBaffleCount","baffleCount","kernelAngle","stopAutoRotation","dispose","nextProps","setSize","aspect","updateProjectionMatrix","kernelAutoRotation","isEqual","updateTank","updateShaft","updateDisk","updateHub","updateBlades","updateBaffles","_this2","timerId","setInterval","clearInterval","update","render","_ref","tankHeight","CylinderGeometry","geometry","createTankGeometry","MeshLambertMaterial","opacity","transparent","side","DoubleSide","tank","Mesh","shaftRadius","_ref2","createShaftGeometry","MeshPhongMaterial","shaft","diskRadius","_ref3","diskHeight","createDiskGeometry","disk","hubRadius","_ref4","hubHeight","createHubGeometry","hub","newValue","oldValue","remove","pop","blade","BoxGeometry","bladeWidth","bladeHeight","bladeOuterRadius","bladeInnerRadius","mesh","push","_ref5","distance","yAxis","Vector3","offset","angle","Math","PI","applyAxisAngle","rotation","baffleInnerRadius","_ref6","baffleOuterRadius","baffleWidth","baffle","createBaffleGeometry","react_default","a","createElement","ref","Component","Content","Layout","Header","Sider","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","canvasWidth","canvasHeight","unit","setState","innerWidth","innerHeight","handleResize","removeEventListener","field","value","defineProperty","target","checked","_this3","className","es","style","overflowY","theme","mode","SubMenu","key","title","type","Item","min","defaultValue","onChange","handleChange","handleAutoRotation","bind","src_Turbine","Boolean","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.479c76f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst THREE = require('three');\nvar TrackballControls = require('three-trackballcontrols');\nvar _ = require('lodash');\n\nclass Turbine extends Component {\n  componentDidMount() {\n    this.glRenderer = new THREE.WebGLRenderer({\n      canvas: this.refs.painter,\n      alpha: true,\n      antialias: true\n    });\n    this.glRenderer.animate(() => this.onAnimate());\n\n    this.scene = new THREE.Scene();\n\n    this.camera = new THREE.PerspectiveCamera(45, 1, 0.1, 1000);\n    this.camera.position.set(0, 0, this.props.tankDiameter * 4 / 3);\n    this.scene.add(this.camera);\n\n    this.light = new THREE.PointLight(0xffffff, 0.3);\n    this.light.position.set(0, 0, this.props.tankDiameter * 4 / 3);\n    this.scene.add(this.light);\n\n    this.controls = new TrackballControls(this.camera, this.refs.painter);\n\n    this.controls.rotateSpeed = 1.0;\n    this.controls.zoomSpeed = 1.2;\n    this.controls.panSpeed = 0.8;\n\n    this.controls.noZoom = false;\n    this.controls.noPan = false;\n\n    this.controls.staticMoving = true;\n    this.controls.dynamicDampingFactor = 0.3;\n\n    this.controls.keys = [ 65, 83, 68 ];\n\n    this.controls.addEventListener('change', () => {\n      this.light.position.copy(this.camera.position);\n    });\n    this.startAutoRotation();\n\n    this.raycaster = new THREE.Raycaster();\n    this.normalVector = new THREE.Vector2();\n    window.addEventListener('mousemove', event => {\n      // calculate mouse position in normalized device coordinates\n      // (-1 to +1) for both components\n      this.normalVector.x = ((event.clientX - 250) / this.props.width) * 2 - 1;\n      this.normalVector.y = -((event.clientY - 64) / this.props.height) * 2 + 1;\n\n      // update the picking ray with the camera and mouse position\n      this.raycaster.setFromCamera(this.normalVector, this.camera);\n\n      // calculate objects intersecting the picking ray\n      var intersects = this.raycaster.intersectObjects(this.scene.children, true);\n      for (var i = 0; i < intersects.length; i++) {\n        intersects[i].object.material.color.set(0xff0000);\n      }\n    });\n\n    this.createTank();\n    this.createShaft();\n    this.createDisk();\n    this.createHub();\n\n    this.blades = [];\n    this.changeBladeCount(this.props.bladeCount, 0);\n    this.baffles = [];\n    this.changeBaffleCount(this.props.baffleCount, 0);\n\n    this.kernelAngle = 0;\n  }\n\n  componentWillUnmount() {\n    this.stopAutoRotation();\n    this.controls.dispose();\n    delete this.controls;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {\n      this.glRenderer.setSize(nextProps.width, nextProps.height);\n      this.camera.aspect = nextProps.width / nextProps.height;\n      this.camera.updateProjectionMatrix();\n    }\n\n    if (nextProps.kernelAutoRotation && !this.props.kernelAutoRotation) {\n      this.startAutoRotation();\n    } else if (!nextProps.kernelAutoRotation && this.props.kernelAutoRotation) {\n      this.stopAutoRotation();\n    }\n\n    if (nextProps.bladeCount !== this.props.bladeCount) {\n      this.changeBladeCount(nextProps.bladeCount, this.props.bladeCount);\n    }\n    if (nextProps.baffleCount !== this.props.baffleCount) {\n      this.changeBaffleCount(nextProps.baffleCount, this.props.baffleCount);\n    }\n\n    if (!_.isEqual(nextProps, this.props)) {\n      this.updateTank(nextProps);\n      this.updateShaft(nextProps);\n      this.updateDisk(nextProps);\n      this.updateHub(nextProps);\n      this.updateBlades(nextProps);\n      this.updateBaffles(nextProps);\n    }\n  }\n\n  startAutoRotation() {\n    this.timerId = window.setInterval(() => {\n      this.kernelAngle = (this.kernelAngle + 4) % 360;\n      this.updateBlades(this.props);\n    }, 60);\n  }\n\n  stopAutoRotation() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  onAnimate() {\n    // we will get this callback every frame\n\n    // pretend cubeRotation is immutable.\n    // this helps with updates and pure rendering.\n    // React will be sure that the rotation has now updated.\n    // this.setState({\n    //   cubeRotation: new THREE.Euler(\n    //     this.props.cubeRotation.x + 0.1,\n    //     this.props.cubeRotation.y + 0.1,\n    //     0\n    //   )\n    // });\n    this.controls.update();\n\n    this.glRenderer.render(this.scene, this.camera);\n  }\n\n  createTankGeometry({ tankDiameter, tankHeight }) {\n    return new THREE.CylinderGeometry(tankDiameter / 2, tankDiameter / 2, tankHeight, 30);\n  }\n\n  createTank() {\n    var geometry = this.createTankGeometry(this.props);\n    var material = new THREE.MeshLambertMaterial({\n      color: 0xcccccc,\n      opacity: 0.2,\n      transparent: true,\n      side: THREE.DoubleSide\n    });\n    this.tank = new THREE.Mesh(geometry, material);\n    this.scene.add(this.tank);\n  }\n\n  updateTank(props) {\n    delete this.tank.geometry;\n    this.tank.geometry = this.createTankGeometry(props);\n  }\n\n  createShaftGeometry({ shaftRadius, tankHeight }) {\n    return new THREE.CylinderGeometry(shaftRadius, shaftRadius, tankHeight, 30);\n  }\n\n  createShaft() {\n    var geometry = this.createShaftGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.shaft = new THREE.Mesh(geometry, material);\n    this.scene.add(this.shaft);\n  }\n\n  updateShaft(props) {\n    delete this.shaft.geometry;\n    this.shaft.geometry = this.createShaftGeometry(props);\n  }\n\n  createDiskGeometry({ diskRadius, diskHeight }) {\n    return new THREE.CylinderGeometry(diskRadius, diskRadius, diskHeight, 30);\n  }\n\n  createDisk() {\n    var geometry = this.createDiskGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.disk = new THREE.Mesh(geometry, material);\n    this.disk.position.set(0, -(this.props.tankHeight / 6), 0);\n    this.scene.add(this.disk);\n  }\n\n  updateDisk(props) {\n    delete this.disk.geometry;\n    this.disk.geometry = this.createDiskGeometry(props);\n    this.disk.position.set(0, -(props.tankHeight / 6), 0);\n  }\n\n  createHubGeometry({ hubRadius, hubHeight }) {\n    return new THREE.CylinderGeometry(hubRadius, hubRadius, hubHeight, 30);\n  }\n\n  createHub() {\n    var geometry = this.createHubGeometry(this.props);\n    var material = new THREE.MeshPhongMaterial({\n      color: 0xdddddd\n    });\n    this.hub = new THREE.Mesh(geometry, material);\n    this.hub.position.set(0, -(this.props.tankHeight / 6), 0);\n    this.scene.add(this.hub);\n  }\n\n  updateHub(props) {\n    delete this.hub.geometry;\n    this.hub.geometry = this.createHubGeometry(props);\n    this.hub.position.set(0, -(props.tankHeight / 6), 0);\n  }\n\n  changeBladeCount(newValue: number, oldValue: number) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.blades[i]);\n        this.blades.pop();\n        delete this.blades[i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var blade = new THREE.BoxGeometry(this.props.bladeWidth, this.props.bladeHeight, this.props.bladeOuterRadius - this.props.bladeInnerRadius);\n        var material = new THREE.MeshPhongMaterial({ color: 0xeeeeee });\n        var mesh = new THREE.Mesh(blade, material);\n        this.blades.push(mesh);\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  updateBlades({ bladeInnerRadius, bladeOuterRadius, tankHeight }) {\n    var distance = (bladeInnerRadius + bladeOuterRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    var offset = new THREE.Vector3(0, -(tankHeight / 6), 0);\n    for (var i = 0; i < this.blades.length; i++) {\n      var angle = (360 * i / this.blades.length + this.kernelAngle) % 360;\n      angle = 2 * Math.PI * angle / 360;\n      this.blades[i].position.set(0, 0, distance);\n      this.blades[i].position.applyAxisAngle(yAxis, angle);\n      this.blades[i].position.add(offset);\n      this.blades[i].rotation.set(0, angle, 0);\n    }\n  }\n\n  createBaffleGeometry({ baffleInnerRadius, baffleOuterRadius, baffleWidth, tankHeight }) {\n    return new THREE.BoxGeometry(baffleWidth, tankHeight, baffleOuterRadius - baffleInnerRadius);\n  }\n\n  changeBaffleCount(newValue: number, oldValue: number) {\n    var i;\n    if (newValue < oldValue) {\n      for (i = oldValue - 1; i >= newValue; i--) {\n        this.scene.remove(this.baffles[i]);\n        this.baffles.pop();\n        delete this.baffles[i];\n      }\n    } else if (newValue > oldValue) {\n      for (i = oldValue; i < newValue; i++) {\n        var baffle = this.createBaffleGeometry(this.props);\n        var material = new THREE.MeshPhongMaterial({ color: 0xeeeeee });\n        var mesh = new THREE.Mesh(baffle, material);\n        this.baffles.push(mesh);\n        this.scene.add(mesh);\n      }\n    }\n  }\n\n  updateBaffles(props) {\n    const { baffleInnerRadius, baffleOuterRadius, tankHeight } = props;\n    var distance = (baffleInnerRadius + baffleOuterRadius) / 2;\n    var yAxis = new THREE.Vector3(0, 1, 0);\n    for (var i = 0; i < this.baffles.length; i++) {\n      delete this.baffles[i].geometry;\n      this.baffles[i].geometry = this.createBaffleGeometry(props);\n      var angle = 2 * Math.PI * i / this.baffles.length;\n      this.baffles[i].position.set(0, 0, distance);\n      this.baffles[i].position.applyAxisAngle(yAxis, angle);\n      this.baffles[i].rotation.set(0, angle, 0);\n    }\n  }\n\n  render() {\n    return (\n      <canvas ref=\"painter\" width={this.props.width} height={this.props.height}></canvas>\n    );\n  }\n}\n\nTurbine.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  tankDiameter: PropTypes.number.isRequired,\n  tankHeight: PropTypes.number.isRequired,\n  shaftRadius: PropTypes.number.isRequired,\n  kernelAutoRotation: PropTypes.bool,\n  diskRadius: PropTypes.number.isRequired,\n  diskHeight: PropTypes.number.isRequired,\n  hubRadius: PropTypes.number.isRequired,\n  hubHeight: PropTypes.number.isRequired,\n  bladeCount: PropTypes.number.isRequired,\n  bladeInnerRadius: PropTypes.number.isRequired,\n  bladeOuterRadius: PropTypes.number.isRequired,\n  bladeWidth: PropTypes.number.isRequired,\n  bladeHeight: PropTypes.number.isRequired,\n  baffleCount: PropTypes.number.isRequired,\n  baffleInnerRadius: PropTypes.number.isRequired,\n  baffleOuterRadius: PropTypes.number.isRequired,\n  baffleWidth: PropTypes.number.isRequired,\n};\n\nexport default Turbine;\n","import React, { Component } from 'react';\nimport { Checkbox, Icon, InputNumber, Layout, Menu } from 'antd';\nimport Turbine from './Turbine';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nconst { Content, Header, Sider } = Layout;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const unit = 300;\n    this.state = {\n      canvasWidth: 50,\n      canvasHeight: 50,\n      tankDiameter: unit,\n      tankHeight: unit,\n      shaftRadius: unit * 2 / 75,\n      kernelAutoRotation: true,\n      diskRadius: unit / 8,\n      diskHeight: unit / 75,\n      hubRadius: unit * 4 / 75,\n      hubHeight: unit / 15,\n      bladeCount: 6,\n      bladeInnerRadius: unit / 12,\n      bladeOuterRadius: unit / 6,\n      bladeWidth: unit / 75,\n      bladeHeight: unit / 15,\n      baffleCount: 4,\n      baffleInnerRadius: unit * 2 / 5,\n      baffleOuterRadius: unit / 2,\n      baffleWidth: unit / 75\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      canvasWidth: window.innerWidth - 250,\n      canvasHeight: window.innerHeight - 64\n    });\n    this.handleResize = () => {\n      this.setState({\n        canvasWidth: window.innerWidth - 250,\n        canvasHeight: window.innerHeight - 64\n      });\n    }\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleChange(field, value) {\n    this.setState({ [field]: value });\n  }\n\n  handleAutoRotation(event) {\n    this.setState({ kernelAutoRotation: event.target.checked });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout style={{ height: '100%' }}>\n          <Sider width={250} style={{ overflowY: 'auto' }}>\n            <div className=\"logo\"></div>\n            <Menu theme=\"dark\" mode=\"inline\">\n              <Menu.SubMenu key=\"submenu1\" title={<span><Icon type=\"mail\" /><span>Tank</span></span>}>\n                <Menu.Item key=\"menuitem1\">\n                  <span>Diameter</span>\n                  <InputNumber min={100} defaultValue={this.state.tankDiameter} onChange={(value) => this.handleChange('tankDiameter', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem2\">\n                  <span>Height</span>\n                  <InputNumber min={100} defaultValue={this.state.tankHeight} onChange={(value) => this.handleChange('tankHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"submenu2\" title={<span><Icon type=\"mail\" /><span>Shaft</span></span>}>\n                <Menu.Item key=\"menuitem3\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.shaftRadius} onChange={(value) => this.handleChange('shaftRadius', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"submenu3\" title={<span><Icon type=\"mail\" /><span>Disk</span></span>}>\n                <Menu.Item key=\"menuitem4\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.diskRadius} onChange={(value) => this.handleChange('diskRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem5\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.diskHeight} onChange={(value) => this.handleChange('diskHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"submenu4\" title={<span><Icon type=\"mail\" /><span>Hub</span></span>}>\n                <Menu.Item key=\"menuitem6\">\n                  <span>Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.hubRadius} onChange={(value) => this.handleChange('hubRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem7\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.hubHeight} onChange={(value) => this.handleChange('hubHeight', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"submenu5\" title={<span><Icon type=\"mail\" /><span>Blade</span></span>}>\n                <Menu.Item key=\"menuitem8\">\n                  <span>Count</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeCount} onChange={(value) => this.handleChange('bladeCount', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem9\">\n                  <span>Inner Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeInnerRadius} onChange={(value) => this.handleChange('bladeInnerRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem10\">\n                  <span>Outer Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeOuterRadius} onChange={(value) => this.handleChange('bladeOuterRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem11\">\n                  <span>Width</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeWidth} onChange={(value) => this.handleChange('bladeWidth', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem12\">\n                  <span>Height</span>\n                  <InputNumber min={1} defaultValue={this.state.bladeHeight} onChange={(value) => this.handleChange('bladeHeight', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem13\">\n                  <Checkbox checked={this.state.kernelAutoRotation} onChange={this.handleAutoRotation.bind(this)}>Auto Rotation</Checkbox>\n                </Menu.Item>\n              </Menu.SubMenu>\n              <Menu.SubMenu key=\"submenu6\" title={<span><Icon type=\"mail\" /><span>Baffle</span></span>}>\n                <Menu.Item key=\"menuitem14\">\n                  <span>Count</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleCount} onChange={(value) => this.handleChange('baffleCount', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem15\">\n                  <span>Inner Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleInnerRadius} onChange={(value) => this.handleChange('baffleInnerRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem16\">\n                  <span>Outer Radius</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleOuterRadius} onChange={(value) => this.handleChange('baffleOuterRadius', value)} />\n                </Menu.Item>\n                <Menu.Item key=\"menuitem17\">\n                  <span>Width</span>\n                  <InputNumber min={1} defaultValue={this.state.baffleWidth} onChange={(value) => this.handleChange('baffleWidth', value)} />\n                </Menu.Item>\n              </Menu.SubMenu>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Header>\n              <h1>Turbulent Dynamics</h1>\n            </Header>\n            <Content style={{ overflowY: 'hidden' }}>\n              <Turbine\n                width={this.state.canvasWidth}\n                height={this.state.canvasHeight}\n                tankDiameter={this.state.tankDiameter}\n                tankHeight={this.state.tankHeight}\n                shaftRadius={this.state.shaftRadius}\n                kernelAutoRotation={this.state.kernelAutoRotation}\n                diskRadius={this.state.diskRadius}\n                diskHeight={this.state.diskHeight}\n                hubRadius={this.state.hubRadius}\n                hubHeight={this.state.hubHeight}\n                bladeCount={this.state.bladeCount}\n                bladeInnerRadius={this.state.bladeInnerRadius}\n                bladeOuterRadius={this.state.bladeOuterRadius}\n                bladeWidth={this.state.bladeWidth}\n                bladeHeight={this.state.bladeHeight}\n                baffleCount={this.state.baffleCount}\n                baffleInnerRadius={this.state.baffleInnerRadius}\n                baffleOuterRadius={this.state.baffleOuterRadius}\n                baffleWidth={this.state.baffleWidth}\n              />\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}